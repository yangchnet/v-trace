syntax = "proto3";

package ca.v1;

option go_package = "gitee.com/qciip-icp/v-trace/api/ca/v1;v1";

import "google/protobuf/wrappers.proto";

service CAService {
  rpc GenCert(GenCertRequest) returns (GenCertResponse) {};
  rpc GetCert(GetCertRequest) returns (GetCertResponse) {};
}

message GenCertRequest {
  // 组织id
  string org_id = 1;
  // 唯一用户名
  string username = 2;
  // 用户类型(root, ca, admin, client, consensus, common)
  UserType user_type = 3;
  // 证书用途(sign, tls, tls-enc)
  repeated CertUsage cert_usage = 4;
  // 密钥密码
  string private_key_pwd = 5;
  // 证书字段-国家
  string country = 6;
  // 证书字段-城市
  string locality = 7;
  // 证书字段-省份
  string province = 8;
}

message GenCertResponse {
  // 证书内容
  google.protobuf.StringValue cert = 1;
  // 密钥内容
  google.protobuf.StringValue private_key = 2;
  // 用户名
  google.protobuf.StringValue username = 3;
  // tls证书
  google.protobuf.StringValue tls_cert = 4;
  // tls密钥
  google.protobuf.StringValue tls_key = 5;
}

message GetCertRequest {
  // 组织id
  string org_id = 1;
  // 唯一用户名
  string username = 2;
  // 用户类型(root, ca, admin, client, consensus, common)
  UserType user_type = 3;
  // 证书用途(sign, tls, tls-enc)
  repeated CertUsage cert_usage = 4;
}

message GetCertResponse {
  // 证书内容
  google.protobuf.StringValue cert = 1;
  // 密钥内容
  google.protobuf.StringValue private_key = 2;
  // 用户名
  google.protobuf.StringValue username = 3;
  // tls证书
  google.protobuf.StringValue tls_cert = 4;
  // tls密钥
  google.protobuf.StringValue tls_key = 5;
}

// 1. 创建证书、密钥等
// 2. 根据用户名查询证书、密钥
// 3. 延期证书
// 4. 撤销证书

enum UserType {
  root = 0;
  ca = 1;
  admin = 2;
  client = 3;
  consensus = 4;
  common = 5;
}

enum CertUsage {
  sign = 0;
  tls = 1;
  tls_enc = 2;
}
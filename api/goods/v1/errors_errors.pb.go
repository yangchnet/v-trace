// Code generated by protoc-gen-go-errors. DO NOT EDIT.

package v1

import (
	fmt "fmt"
	errors "github.com/go-kratos/kratos/v2/errors"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the kratos package it is being compiled against.
const _ = errors.SupportPackageIsVersion1

// 未找到产品
func IsGoodsNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_NOT_FOUND.String() && e.Code == 404
}

// 未找到产品
func ErrorGoodsNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, Error_GOODS_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 产品类未找到
func IsGoodsClassNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_CLASS_NOT_FOUND.String() && e.Code == 404
}

// 产品类未找到
func ErrorGoodsClassNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, Error_GOODS_CLASS_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 产品批次未找到
func IsGoodsSerialNotFound(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_SERIAL_NOT_FOUND.String() && e.Code == 404
}

// 产品批次未找到
func ErrorGoodsSerialNotFound(format string, args ...interface{}) *errors.Error {
	return errors.New(404, Error_GOODS_SERIAL_NOT_FOUND.String(), fmt.Sprintf(format, args...))
}

// 创建产品类别失败
func IsGoodsClassCreateFailed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_CLASS_CREATE_FAILED.String() && e.Code == 500
}

// 创建产品类别失败
func ErrorGoodsClassCreateFailed(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_GOODS_CLASS_CREATE_FAILED.String(), fmt.Sprintf(format, args...))
}

// 创建产品批次失败
func IsGoodsSerialCreateFailed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_SERIAL_CREATE_FAILED.String() && e.Code == 500
}

// 创建产品批次失败
func ErrorGoodsSerialCreateFailed(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_GOODS_SERIAL_CREATE_FAILED.String(), fmt.Sprintf(format, args...))
}

// 创建产品失败
func IsGoodsCreateFailed(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_GOODS_CREATE_FAILED.String() && e.Code == 500
}

// 创建产品失败
func ErrorGoodsCreateFailed(format string, args ...interface{}) *errors.Error {
	return errors.New(500, Error_GOODS_CREATE_FAILED.String(), fmt.Sprintf(format, args...))
}

// 无权限
func IsPermissionDeny(err error) bool {
	if err == nil {
		return false
	}
	e := errors.FromError(err)
	return e.Reason == Error_PERMISSION_DENY.String() && e.Code == 403
}

// 无权限
func ErrorPermissionDeny(format string, args ...interface{}) *errors.Error {
	return errors.New(403, Error_PERMISSION_DENY.String(), fmt.Sprintf(format, args...))
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: trans/v1/trans.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationResult int32

const (
	OperationResult_SUCCESS OperationResult = 0
	OperationResult_FAIL    OperationResult = 1
)

// Enum value maps for OperationResult.
var (
	OperationResult_name = map[int32]string{
		0: "SUCCESS",
		1: "FAIL",
	}
	OperationResult_value = map[string]int32{
		"SUCCESS": 0,
		"FAIL":    1,
	}
)

func (x OperationResult) Enum() *OperationResult {
	p := new(OperationResult)
	*p = x
	return p
}

func (x OperationResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationResult) Descriptor() protoreflect.EnumDescriptor {
	return file_trans_v1_trans_proto_enumTypes[0].Descriptor()
}

func (OperationResult) Type() protoreflect.EnumType {
	return &file_trans_v1_trans_proto_enumTypes[0]
}

func (x OperationResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationResult.Descriptor instead.
func (OperationResult) EnumDescriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{0}
}

type BatchMintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	To       *Identity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	TokenIds []int64   `protobuf:"varint,3,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
	TransIds []string  `protobuf:"bytes,4,rep,name=transIds,proto3" json:"transIds,omitempty"`
	Digest   string    `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *BatchMintRequest) Reset() {
	*x = BatchMintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMintRequest) ProtoMessage() {}

func (x *BatchMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMintRequest.ProtoReflect.Descriptor instead.
func (*BatchMintRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{0}
}

func (x *BatchMintRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *BatchMintRequest) GetTo() *Identity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *BatchMintRequest) GetTokenIds() []int64 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *BatchMintRequest) GetTransIds() []string {
	if x != nil {
		return x.TransIds
	}
	return nil
}

func (x *BatchMintRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type BatchMintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *BatchMintResponse) Reset() {
	*x = BatchMintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchMintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchMintResponse) ProtoMessage() {}

func (x *BatchMintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchMintResponse.ProtoReflect.Descriptor instead.
func (*BatchMintResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{1}
}

func (x *BatchMintResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type BatchBurnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	TokenIds []int64   `protobuf:"varint,3,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
}

func (x *BatchBurnRequest) Reset() {
	*x = BatchBurnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchBurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchBurnRequest) ProtoMessage() {}

func (x *BatchBurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchBurnRequest.ProtoReflect.Descriptor instead.
func (*BatchBurnRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{2}
}

func (x *BatchBurnRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *BatchBurnRequest) GetTokenIds() []int64 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

type BatchBurnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *BatchBurnResponse) Reset() {
	*x = BatchBurnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchBurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchBurnResponse) ProtoMessage() {}

func (x *BatchBurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchBurnResponse.ProtoReflect.Descriptor instead.
func (*BatchBurnResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{3}
}

func (x *BatchBurnResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type BatchProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	TokenIds []int64   `protobuf:"varint,3,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
	TransIds []string  `protobuf:"bytes,4,rep,name=transIds,proto3" json:"transIds,omitempty"`
	Digest   string    `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *BatchProcessRequest) Reset() {
	*x = BatchProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProcessRequest) ProtoMessage() {}

func (x *BatchProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProcessRequest.ProtoReflect.Descriptor instead.
func (*BatchProcessRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{4}
}

func (x *BatchProcessRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *BatchProcessRequest) GetTokenIds() []int64 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *BatchProcessRequest) GetTransIds() []string {
	if x != nil {
		return x.TransIds
	}
	return nil
}

func (x *BatchProcessRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type BatchProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *BatchProcessResponse) Reset() {
	*x = BatchProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchProcessResponse) ProtoMessage() {}

func (x *BatchProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchProcessResponse.ProtoReflect.Descriptor instead.
func (*BatchProcessResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{5}
}

func (x *BatchProcessResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type BatchTransformRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller   *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	From     *Identity `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       *Identity `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	TokenIds []int64   `protobuf:"varint,4,rep,packed,name=token_ids,json=tokenIds,proto3" json:"token_ids,omitempty"`
	TransIds []string  `protobuf:"bytes,5,rep,name=transIds,proto3" json:"transIds,omitempty"`
	Digest   string    `protobuf:"bytes,6,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *BatchTransformRequest) Reset() {
	*x = BatchTransformRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchTransformRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTransformRequest) ProtoMessage() {}

func (x *BatchTransformRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTransformRequest.ProtoReflect.Descriptor instead.
func (*BatchTransformRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{6}
}

func (x *BatchTransformRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *BatchTransformRequest) GetFrom() *Identity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *BatchTransformRequest) GetTo() *Identity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *BatchTransformRequest) GetTokenIds() []int64 {
	if x != nil {
		return x.TokenIds
	}
	return nil
}

func (x *BatchTransformRequest) GetTransIds() []string {
	if x != nil {
		return x.TransIds
	}
	return nil
}

func (x *BatchTransformRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type BatchTransformResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *BatchTransformResponse) Reset() {
	*x = BatchTransformResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchTransformResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchTransformResponse) ProtoMessage() {}

func (x *BatchTransformResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchTransformResponse.ProtoReflect.Descriptor instead.
func (*BatchTransformResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{7}
}

func (x *BatchTransformResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type NameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者身份
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// transId
	TransId string `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
}

func (x *NameRequest) Reset() {
	*x = NameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameRequest) ProtoMessage() {}

func (x *NameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameRequest.ProtoReflect.Descriptor instead.
func (*NameRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{8}
}

func (x *NameRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *NameRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

type NameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *NameResponse) Reset() {
	*x = NameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NameResponse) ProtoMessage() {}

func (x *NameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NameResponse.ProtoReflect.Descriptor instead.
func (*NameResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{9}
}

func (x *NameResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type SymbolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 身份标识
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// transId
	TransId string `protobuf:"bytes,2,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
}

func (x *SymbolRequest) Reset() {
	*x = SymbolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolRequest) ProtoMessage() {}

func (x *SymbolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolRequest.ProtoReflect.Descriptor instead.
func (*SymbolRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{10}
}

func (x *SymbolRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *SymbolRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

type SymbolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *SymbolResponse) Reset() {
	*x = SymbolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SymbolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SymbolResponse) ProtoMessage() {}

func (x *SymbolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SymbolResponse.ProtoReflect.Descriptor instead.
func (*SymbolResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{11}
}

func (x *SymbolResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type MintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 身份标识
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// to
	To *Identity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// tokenId, 需保证唯一性
	TokenId int64 `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// transId
	TransId string `protobuf:"bytes,4,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	// digest
	Digest string `protobuf:"bytes,5,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *MintRequest) Reset() {
	*x = MintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintRequest) ProtoMessage() {}

func (x *MintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintRequest.ProtoReflect.Descriptor instead.
func (*MintRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{12}
}

func (x *MintRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *MintRequest) GetTo() *Identity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *MintRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *MintRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *MintRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type MintResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *MintResponse) Reset() {
	*x = MintResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintResponse) ProtoMessage() {}

func (x *MintResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintResponse.ProtoReflect.Descriptor instead.
func (*MintResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{13}
}

func (x *MintResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type BurnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 身份标识
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// 要销毁的tokenId
	TokenId int64 `protobuf:"varint,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// transId
	TransId string `protobuf:"bytes,3,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	// callback url which is a golang url.URL type
	CallbackUrl *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *BurnRequest) Reset() {
	*x = BurnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnRequest) ProtoMessage() {}

func (x *BurnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnRequest.ProtoReflect.Descriptor instead.
func (*BurnRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{14}
}

func (x *BurnRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *BurnRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *BurnRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *BurnRequest) GetCallbackUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.CallbackUrl
	}
	return nil
}

type BurnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *BurnResponse) Reset() {
	*x = BurnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BurnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BurnResponse) ProtoMessage() {}

func (x *BurnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BurnResponse.ProtoReflect.Descriptor instead.
func (*BurnResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{15}
}

func (x *BurnResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type TransferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// 转账者
	From *Identity `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	// 接收转账者
	To *Identity `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	// tokenId
	TokenId int64 `protobuf:"varint,4,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// transId
	TransId string `protobuf:"bytes,5,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	// digest
	Digest string `protobuf:"bytes,6,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (x *TransferRequest) Reset() {
	*x = TransferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferRequest) ProtoMessage() {}

func (x *TransferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferRequest.ProtoReflect.Descriptor instead.
func (*TransferRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{16}
}

func (x *TransferRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *TransferRequest) GetFrom() *Identity {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *TransferRequest) GetTo() *Identity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *TransferRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *TransferRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *TransferRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

type TransferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *TransferResponse) Reset() {
	*x = TransferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferResponse) ProtoMessage() {}

func (x *TransferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferResponse.ProtoReflect.Descriptor instead.
func (*TransferResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{17}
}

func (x *TransferResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type ApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作者
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// to
	To *Identity `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	// tokenId
	TokenId int64 `protobuf:"varint,3,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// callback url which is a golang url.URL type
	CallbackUrl *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *ApproveRequest) Reset() {
	*x = ApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveRequest) ProtoMessage() {}

func (x *ApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveRequest.ProtoReflect.Descriptor instead.
func (*ApproveRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{18}
}

func (x *ApproveRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *ApproveRequest) GetTo() *Identity {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *ApproveRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *ApproveRequest) GetCallbackUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.CallbackUrl
	}
	return nil
}

type ApproveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *ApproveResponse) Reset() {
	*x = ApproveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApproveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApproveResponse) ProtoMessage() {}

func (x *ApproveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApproveResponse.ProtoReflect.Descriptor instead.
func (*ApproveResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{19}
}

func (x *ApproveResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type SetApproveForAllRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 授权人
	Caller *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	// 被授权人operator
	Operator *Identity `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	// 是否授权
	Approved bool `protobuf:"varint,3,opt,name=approved,proto3" json:"approved,omitempty"`
	// transId
	TransId string `protobuf:"bytes,5,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	// callback url which is a golang url.URL type
	CallbackUrl *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *SetApproveForAllRequest) Reset() {
	*x = SetApproveForAllRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetApproveForAllRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetApproveForAllRequest) ProtoMessage() {}

func (x *SetApproveForAllRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetApproveForAllRequest.ProtoReflect.Descriptor instead.
func (*SetApproveForAllRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{20}
}

func (x *SetApproveForAllRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *SetApproveForAllRequest) GetOperator() *Identity {
	if x != nil {
		return x.Operator
	}
	return nil
}

func (x *SetApproveForAllRequest) GetApproved() bool {
	if x != nil {
		return x.Approved
	}
	return false
}

func (x *SetApproveForAllRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *SetApproveForAllRequest) GetCallbackUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.CallbackUrl
	}
	return nil
}

type SetApproveForAllResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *SetApproveForAllResponse) Reset() {
	*x = SetApproveForAllResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetApproveForAllResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetApproveForAllResponse) ProtoMessage() {}

func (x *SetApproveForAllResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetApproveForAllResponse.ProtoReflect.Descriptor instead.
func (*SetApproveForAllResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{21}
}

func (x *SetApproveForAllResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type GrantRoleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 授予角色者
	Granter *Identity `protobuf:"bytes,1,opt,name=granter,proto3" json:"granter,omitempty"`
	// 被授予角色者
	Account *Identity `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	// transId
	TransId string `protobuf:"bytes,3,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	// callback url which is a golang url.URL type
	CallbackUrl *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
}

func (x *GrantRoleRequest) Reset() {
	*x = GrantRoleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRoleRequest) ProtoMessage() {}

func (x *GrantRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRoleRequest.ProtoReflect.Descriptor instead.
func (*GrantRoleRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{22}
}

func (x *GrantRoleRequest) GetGranter() *Identity {
	if x != nil {
		return x.Granter
	}
	return nil
}

func (x *GrantRoleRequest) GetAccount() *Identity {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *GrantRoleRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *GrantRoleRequest) GetCallbackUrl() *wrapperspb.StringValue {
	if x != nil {
		return x.CallbackUrl
	}
	return nil
}

type GrantRoleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 操作结果
	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *GrantRoleResponse) Reset() {
	*x = GrantRoleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GrantRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GrantRoleResponse) ProtoMessage() {}

func (x *GrantRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GrantRoleResponse.ProtoReflect.Descriptor instead.
func (*GrantRoleResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{23}
}

func (x *GrantRoleResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type GetTransRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransId string `protobuf:"bytes,1,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
}

func (x *GetTransRequest) Reset() {
	*x = GetTransRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransRequest) ProtoMessage() {}

func (x *GetTransRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransRequest.ProtoReflect.Descriptor instead.
func (*GetTransRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{24}
}

func (x *GetTransRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

type GetTransResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Trans *TransRecord `protobuf:"bytes,1,opt,name=trans,proto3" json:"trans,omitempty"`
}

func (x *GetTransResponse) Reset() {
	*x = GetTransResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransResponse) ProtoMessage() {}

func (x *GetTransResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransResponse.ProtoReflect.Descriptor instead.
func (*GetTransResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{25}
}

func (x *GetTransResponse) GetTrans() *TransRecord {
	if x != nil {
		return x.Trans
	}
	return nil
}

type UpdateTransRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransId string `protobuf:"bytes,1,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
	TxHash  string `protobuf:"bytes,2,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Success bool   `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *UpdateTransRequest) Reset() {
	*x = UpdateTransRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransRequest) ProtoMessage() {}

func (x *UpdateTransRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransRequest.ProtoReflect.Descriptor instead.
func (*UpdateTransRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{26}
}

func (x *UpdateTransRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

func (x *UpdateTransRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *UpdateTransRequest) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateTransResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *UpdateTransResponse) Reset() {
	*x = UpdateTransResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTransResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTransResponse) ProtoMessage() {}

func (x *UpdateTransResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTransResponse.ProtoReflect.Descriptor instead.
func (*UpdateTransResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{27}
}

func (x *UpdateTransResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type AddProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Caller  *Identity `protobuf:"bytes,1,opt,name=caller,proto3" json:"caller,omitempty"`
	TokenId int64     `protobuf:"varint,2,opt,name=tokenId,proto3" json:"tokenId,omitempty"`
	Digest  string    `protobuf:"bytes,3,opt,name=digest,proto3" json:"digest,omitempty"`
	TransId string    `protobuf:"bytes,4,opt,name=trans_id,json=transId,proto3" json:"trans_id,omitempty"`
}

func (x *AddProcessRequest) Reset() {
	*x = AddProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProcessRequest) ProtoMessage() {}

func (x *AddProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProcessRequest.ProtoReflect.Descriptor instead.
func (*AddProcessRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{28}
}

func (x *AddProcessRequest) GetCaller() *Identity {
	if x != nil {
		return x.Caller
	}
	return nil
}

func (x *AddProcessRequest) GetTokenId() int64 {
	if x != nil {
		return x.TokenId
	}
	return 0
}

func (x *AddProcessRequest) GetDigest() string {
	if x != nil {
		return x.Digest
	}
	return ""
}

func (x *AddProcessRequest) GetTransId() string {
	if x != nil {
		return x.TransId
	}
	return ""
}

type AddProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result OperationResult `protobuf:"varint,1,opt,name=result,proto3,enum=trans.v1.OperationResult" json:"result,omitempty"`
}

func (x *AddProcessResponse) Reset() {
	*x = AddProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddProcessResponse) ProtoMessage() {}

func (x *AddProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddProcessResponse.ProtoReflect.Descriptor instead.
func (*AddProcessResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{29}
}

func (x *AddProcessResponse) GetResult() OperationResult {
	if x != nil {
		return x.Result
	}
	return OperationResult_SUCCESS
}

type ListTransByObjRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTransByObjRequest) Reset() {
	*x = ListTransByObjRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransByObjRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransByObjRequest) ProtoMessage() {}

func (x *ListTransByObjRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransByObjRequest.ProtoReflect.Descriptor instead.
func (*ListTransByObjRequest) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{30}
}

type ListTransByObjResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListTransByObjResponse) Reset() {
	*x = ListTransByObjResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trans_v1_trans_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTransByObjResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransByObjResponse) ProtoMessage() {}

func (x *ListTransByObjResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trans_v1_trans_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransByObjResponse.ProtoReflect.Descriptor instead.
func (*ListTransByObjResponse) Descriptor() ([]byte, []int) {
	return file_trans_v1_trans_proto_rawDescGZIP(), []int{31}
}

var File_trans_v1_trans_proto protoreflect.FileDescriptor

var file_trans_v1_trans_proto_rawDesc = []byte{
	0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x64, 0x65,
	0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06,
	0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a,
	0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x5b, 0x0a, 0x10, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75,
	0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0x46, 0x0a, 0x11, 0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x72, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x92, 0x01, 0x0a, 0x13, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22,
	0x49, 0x0a, 0x14, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x15, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x26, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x49, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a,
	0x16, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x54, 0x0a, 0x0b, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64,
	0x22, 0x41, 0x0a, 0x0c, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x22, 0x56, 0x0a, 0x0d, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x22, 0x43, 0x0a, 0x0e, 0x53,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xab, 0x01, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x22, 0x41,
	0x0a, 0x0c, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x55, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x0c, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xd7, 0x01, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12,
	0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67,
	0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73,
	0x74, 0x22, 0x45, 0x0a, 0x10, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xbc, 0x01, 0x0a, 0x0e, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xed, 0x01,
	0x0a, 0x17, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x41,
	0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c,
	0x6c, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63,
	0x61, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x08, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c,
	0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0b, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x4d, 0x0a,
	0x18, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0xca, 0x01, 0x0a,
	0x10, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2c, 0x0a, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x2c, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x12, 0x3f, 0x0a, 0x0c, 0x63, 0x61, 0x6c, 0x6c,
	0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x63, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x22, 0x46, 0x0a, 0x11, 0x47, 0x72, 0x61,
	0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x22, 0x2c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x22,
	0x3f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x22, 0x62, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x22, 0x48, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x8c,
	0x01, 0x0a, 0x11, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x67, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x49, 0x64, 0x22, 0x47, 0x0a,
	0x12, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x42, 0x79, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22,
	0x18, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x42, 0x79, 0x4f, 0x62,
	0x6a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2a, 0x28, 0x0a, 0x0f, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x01, 0x32, 0x91, 0x09, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a,
	0x06, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x17, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x15, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x42, 0x75, 0x72, 0x6e, 0x12, 0x15, 0x2e,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43,
	0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x12, 0x18,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x12, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46,
	0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x65, 0x46, 0x6f, 0x72, 0x41, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x12,
	0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74,
	0x52, 0x6f, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x08, 0x47, 0x65,
	0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x12, 0x1c,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0a, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x42, 0x79, 0x4f, 0x62, 0x6a, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x42,
	0x79, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x42, 0x79, 0x4f, 0x62, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x2e, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x75, 0x72, 0x6e, 0x12, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63,
	0x68, 0x42, 0x75, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x1d, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x55, 0x0a, 0x0e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f,
	0x72, 0x6d, 0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x65, 0x65,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x71, 0x63, 0x69, 0x69, 0x70, 0x2d, 0x69, 0x63, 0x70, 0x2f, 0x76,
	0x2d, 0x74, 0x72, 0x61, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_trans_v1_trans_proto_rawDescOnce sync.Once
	file_trans_v1_trans_proto_rawDescData = file_trans_v1_trans_proto_rawDesc
)

func file_trans_v1_trans_proto_rawDescGZIP() []byte {
	file_trans_v1_trans_proto_rawDescOnce.Do(func() {
		file_trans_v1_trans_proto_rawDescData = protoimpl.X.CompressGZIP(file_trans_v1_trans_proto_rawDescData)
	})
	return file_trans_v1_trans_proto_rawDescData
}

var file_trans_v1_trans_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trans_v1_trans_proto_msgTypes = make([]protoimpl.MessageInfo, 32)
var file_trans_v1_trans_proto_goTypes = []interface{}{
	(OperationResult)(0),             // 0: trans.v1.OperationResult
	(*BatchMintRequest)(nil),         // 1: trans.v1.BatchMintRequest
	(*BatchMintResponse)(nil),        // 2: trans.v1.BatchMintResponse
	(*BatchBurnRequest)(nil),         // 3: trans.v1.BatchBurnRequest
	(*BatchBurnResponse)(nil),        // 4: trans.v1.BatchBurnResponse
	(*BatchProcessRequest)(nil),      // 5: trans.v1.BatchProcessRequest
	(*BatchProcessResponse)(nil),     // 6: trans.v1.BatchProcessResponse
	(*BatchTransformRequest)(nil),    // 7: trans.v1.BatchTransformRequest
	(*BatchTransformResponse)(nil),   // 8: trans.v1.BatchTransformResponse
	(*NameRequest)(nil),              // 9: trans.v1.NameRequest
	(*NameResponse)(nil),             // 10: trans.v1.NameResponse
	(*SymbolRequest)(nil),            // 11: trans.v1.SymbolRequest
	(*SymbolResponse)(nil),           // 12: trans.v1.SymbolResponse
	(*MintRequest)(nil),              // 13: trans.v1.MintRequest
	(*MintResponse)(nil),             // 14: trans.v1.MintResponse
	(*BurnRequest)(nil),              // 15: trans.v1.BurnRequest
	(*BurnResponse)(nil),             // 16: trans.v1.BurnResponse
	(*TransferRequest)(nil),          // 17: trans.v1.TransferRequest
	(*TransferResponse)(nil),         // 18: trans.v1.TransferResponse
	(*ApproveRequest)(nil),           // 19: trans.v1.ApproveRequest
	(*ApproveResponse)(nil),          // 20: trans.v1.ApproveResponse
	(*SetApproveForAllRequest)(nil),  // 21: trans.v1.SetApproveForAllRequest
	(*SetApproveForAllResponse)(nil), // 22: trans.v1.SetApproveForAllResponse
	(*GrantRoleRequest)(nil),         // 23: trans.v1.GrantRoleRequest
	(*GrantRoleResponse)(nil),        // 24: trans.v1.GrantRoleResponse
	(*GetTransRequest)(nil),          // 25: trans.v1.GetTransRequest
	(*GetTransResponse)(nil),         // 26: trans.v1.GetTransResponse
	(*UpdateTransRequest)(nil),       // 27: trans.v1.UpdateTransRequest
	(*UpdateTransResponse)(nil),      // 28: trans.v1.UpdateTransResponse
	(*AddProcessRequest)(nil),        // 29: trans.v1.AddProcessRequest
	(*AddProcessResponse)(nil),       // 30: trans.v1.AddProcessResponse
	(*ListTransByObjRequest)(nil),    // 31: trans.v1.ListTransByObjRequest
	(*ListTransByObjResponse)(nil),   // 32: trans.v1.ListTransByObjResponse
	(*Identity)(nil),                 // 33: trans.v1.Identity
	(*wrapperspb.StringValue)(nil),   // 34: google.protobuf.StringValue
	(*TransRecord)(nil),              // 35: trans.v1.TransRecord
}
var file_trans_v1_trans_proto_depIdxs = []int32{
	33, // 0: trans.v1.BatchMintRequest.caller:type_name -> trans.v1.Identity
	33, // 1: trans.v1.BatchMintRequest.to:type_name -> trans.v1.Identity
	0,  // 2: trans.v1.BatchMintResponse.result:type_name -> trans.v1.OperationResult
	33, // 3: trans.v1.BatchBurnRequest.caller:type_name -> trans.v1.Identity
	0,  // 4: trans.v1.BatchBurnResponse.result:type_name -> trans.v1.OperationResult
	33, // 5: trans.v1.BatchProcessRequest.caller:type_name -> trans.v1.Identity
	0,  // 6: trans.v1.BatchProcessResponse.result:type_name -> trans.v1.OperationResult
	33, // 7: trans.v1.BatchTransformRequest.caller:type_name -> trans.v1.Identity
	33, // 8: trans.v1.BatchTransformRequest.from:type_name -> trans.v1.Identity
	33, // 9: trans.v1.BatchTransformRequest.to:type_name -> trans.v1.Identity
	0,  // 10: trans.v1.BatchTransformResponse.result:type_name -> trans.v1.OperationResult
	33, // 11: trans.v1.NameRequest.caller:type_name -> trans.v1.Identity
	0,  // 12: trans.v1.NameResponse.result:type_name -> trans.v1.OperationResult
	33, // 13: trans.v1.SymbolRequest.caller:type_name -> trans.v1.Identity
	0,  // 14: trans.v1.SymbolResponse.result:type_name -> trans.v1.OperationResult
	33, // 15: trans.v1.MintRequest.caller:type_name -> trans.v1.Identity
	33, // 16: trans.v1.MintRequest.to:type_name -> trans.v1.Identity
	0,  // 17: trans.v1.MintResponse.result:type_name -> trans.v1.OperationResult
	33, // 18: trans.v1.BurnRequest.caller:type_name -> trans.v1.Identity
	34, // 19: trans.v1.BurnRequest.callback_url:type_name -> google.protobuf.StringValue
	0,  // 20: trans.v1.BurnResponse.result:type_name -> trans.v1.OperationResult
	33, // 21: trans.v1.TransferRequest.caller:type_name -> trans.v1.Identity
	33, // 22: trans.v1.TransferRequest.from:type_name -> trans.v1.Identity
	33, // 23: trans.v1.TransferRequest.to:type_name -> trans.v1.Identity
	0,  // 24: trans.v1.TransferResponse.result:type_name -> trans.v1.OperationResult
	33, // 25: trans.v1.ApproveRequest.caller:type_name -> trans.v1.Identity
	33, // 26: trans.v1.ApproveRequest.to:type_name -> trans.v1.Identity
	34, // 27: trans.v1.ApproveRequest.callback_url:type_name -> google.protobuf.StringValue
	0,  // 28: trans.v1.ApproveResponse.result:type_name -> trans.v1.OperationResult
	33, // 29: trans.v1.SetApproveForAllRequest.caller:type_name -> trans.v1.Identity
	33, // 30: trans.v1.SetApproveForAllRequest.operator:type_name -> trans.v1.Identity
	34, // 31: trans.v1.SetApproveForAllRequest.callback_url:type_name -> google.protobuf.StringValue
	0,  // 32: trans.v1.SetApproveForAllResponse.result:type_name -> trans.v1.OperationResult
	33, // 33: trans.v1.GrantRoleRequest.granter:type_name -> trans.v1.Identity
	33, // 34: trans.v1.GrantRoleRequest.account:type_name -> trans.v1.Identity
	34, // 35: trans.v1.GrantRoleRequest.callback_url:type_name -> google.protobuf.StringValue
	0,  // 36: trans.v1.GrantRoleResponse.result:type_name -> trans.v1.OperationResult
	35, // 37: trans.v1.GetTransResponse.trans:type_name -> trans.v1.TransRecord
	0,  // 38: trans.v1.UpdateTransResponse.result:type_name -> trans.v1.OperationResult
	33, // 39: trans.v1.AddProcessRequest.caller:type_name -> trans.v1.Identity
	0,  // 40: trans.v1.AddProcessResponse.result:type_name -> trans.v1.OperationResult
	9,  // 41: trans.v1.TransService.Name:input_type -> trans.v1.NameRequest
	11, // 42: trans.v1.TransService.Symbol:input_type -> trans.v1.SymbolRequest
	13, // 43: trans.v1.TransService.Mint:input_type -> trans.v1.MintRequest
	15, // 44: trans.v1.TransService.Burn:input_type -> trans.v1.BurnRequest
	17, // 45: trans.v1.TransService.Transfer:input_type -> trans.v1.TransferRequest
	19, // 46: trans.v1.TransService.Approve:input_type -> trans.v1.ApproveRequest
	21, // 47: trans.v1.TransService.SetApproveForAll:input_type -> trans.v1.SetApproveForAllRequest
	23, // 48: trans.v1.TransService.GrantRole:input_type -> trans.v1.GrantRoleRequest
	25, // 49: trans.v1.TransService.GetTrans:input_type -> trans.v1.GetTransRequest
	27, // 50: trans.v1.TransService.UpdateTrans:input_type -> trans.v1.UpdateTransRequest
	29, // 51: trans.v1.TransService.AddProcess:input_type -> trans.v1.AddProcessRequest
	31, // 52: trans.v1.TransService.ListTransByObj:input_type -> trans.v1.ListTransByObjRequest
	1,  // 53: trans.v1.TransService.BatchMint:input_type -> trans.v1.BatchMintRequest
	3,  // 54: trans.v1.TransService.BatchBurn:input_type -> trans.v1.BatchBurnRequest
	5,  // 55: trans.v1.TransService.BatchProcess:input_type -> trans.v1.BatchProcessRequest
	7,  // 56: trans.v1.TransService.BatchTransform:input_type -> trans.v1.BatchTransformRequest
	10, // 57: trans.v1.TransService.Name:output_type -> trans.v1.NameResponse
	12, // 58: trans.v1.TransService.Symbol:output_type -> trans.v1.SymbolResponse
	14, // 59: trans.v1.TransService.Mint:output_type -> trans.v1.MintResponse
	16, // 60: trans.v1.TransService.Burn:output_type -> trans.v1.BurnResponse
	18, // 61: trans.v1.TransService.Transfer:output_type -> trans.v1.TransferResponse
	20, // 62: trans.v1.TransService.Approve:output_type -> trans.v1.ApproveResponse
	22, // 63: trans.v1.TransService.SetApproveForAll:output_type -> trans.v1.SetApproveForAllResponse
	24, // 64: trans.v1.TransService.GrantRole:output_type -> trans.v1.GrantRoleResponse
	26, // 65: trans.v1.TransService.GetTrans:output_type -> trans.v1.GetTransResponse
	28, // 66: trans.v1.TransService.UpdateTrans:output_type -> trans.v1.UpdateTransResponse
	30, // 67: trans.v1.TransService.AddProcess:output_type -> trans.v1.AddProcessResponse
	32, // 68: trans.v1.TransService.ListTransByObj:output_type -> trans.v1.ListTransByObjResponse
	2,  // 69: trans.v1.TransService.BatchMint:output_type -> trans.v1.BatchMintResponse
	4,  // 70: trans.v1.TransService.BatchBurn:output_type -> trans.v1.BatchBurnResponse
	6,  // 71: trans.v1.TransService.BatchProcess:output_type -> trans.v1.BatchProcessResponse
	8,  // 72: trans.v1.TransService.BatchTransform:output_type -> trans.v1.BatchTransformResponse
	57, // [57:73] is the sub-list for method output_type
	41, // [41:57] is the sub-list for method input_type
	41, // [41:41] is the sub-list for extension type_name
	41, // [41:41] is the sub-list for extension extendee
	0,  // [0:41] is the sub-list for field type_name
}

func init() { file_trans_v1_trans_proto_init() }
func file_trans_v1_trans_proto_init() {
	if File_trans_v1_trans_proto != nil {
		return
	}
	file_trans_v1_model_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_trans_v1_trans_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchMintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchMintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchBurnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchBurnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchTransformRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchTransformResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SymbolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BurnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApproveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetApproveForAllRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetApproveForAllResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRoleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GrantRoleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTransResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransByObjRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trans_v1_trans_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTransByObjResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trans_v1_trans_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   32,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trans_v1_trans_proto_goTypes,
		DependencyIndexes: file_trans_v1_trans_proto_depIdxs,
		EnumInfos:         file_trans_v1_trans_proto_enumTypes,
		MessageInfos:      file_trans_v1_trans_proto_msgTypes,
	}.Build()
	File_trans_v1_trans_proto = out.File
	file_trans_v1_trans_proto_rawDesc = nil
	file_trans_v1_trans_proto_goTypes = nil
	file_trans_v1_trans_proto_depIdxs = nil
}
